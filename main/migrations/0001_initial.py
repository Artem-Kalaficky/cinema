# Generated by Django 4.0.4 on 2022-04-19 14:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Background',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Cinema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('condition', models.TextField(verbose_name='Условия')),
                ('logo', models.ImageField(upload_to='', verbose_name='Логотип')),
                ('top_banner', models.ImageField(upload_to='', verbose_name='Верхний баннер')),
            ],
            options={
                'verbose_name': 'Кинотеатр',
                'verbose_name_plural': 'Кинотеатры',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(verbose_name='Адресс')),
                ('coordinate', models.URLField(verbose_name='Координаты')),
                ('logo', models.ImageField(upload_to='', verbose_name='Логотип')),
                ('name', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='main.cinema', verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Контакты',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='', verbose_name='Картинка')),
            ],
        ),
        migrations.CreateModel(
            name='Seo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='URL')),
                ('title', models.CharField(max_length=25, verbose_name='Title')),
                ('keyword', models.CharField(max_length=30, verbose_name='Keywords')),
                ('description', models.TextField(verbose_name='Description')),
            ],
            options={
                'verbose_name': 'SEO блок',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='URL')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Текст')),
                ('speed', models.CharField(default='1', max_length=1, verbose_name='Скорость вращения')),
                ('status', models.BooleanField(default=True, verbose_name='Статус')),
                ('images', models.ManyToManyField(to='main.image', verbose_name='Галерея картинок')),
            ],
            options={
                'verbose_name': 'Главный слайдер',
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telephone1', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон 1')),
                ('telephone2', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон 2')),
                ('name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('main_picture', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Главная картинка')),
                ('date_created', models.DateField(verbose_name='Дата создания')),
                ('status', models.BooleanField(default=True, verbose_name='Статус')),
                ('is_main_page', models.BooleanField(default=False, verbose_name='Является главной')),
                ('seo_text', models.TextField(blank=True, null=True, verbose_name='SEO текст')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.contact', verbose_name='Контанкты')),
                ('images', models.ManyToManyField(blank=True, to='main.image', verbose_name='Галерея картинок')),
                ('seo', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='main.seo', verbose_name='SEO блок')),
            ],
            options={
                'verbose_name': 'Страница',
                'verbose_name_plural': 'Страницы',
            },
        ),
        migrations.CreateModel(
            name='NewsOrProm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('main_picture', models.ImageField(upload_to='', verbose_name='Главная картинка')),
                ('link_to_video', models.URLField(verbose_name='Видео-ссылка')),
                ('pub_date', models.DateField(verbose_name='Дата публикации')),
                ('status', models.BooleanField(default=True, verbose_name='Статус')),
                ('type', models.BooleanField(verbose_name='Тип')),
                ('images', models.ManyToManyField(to='main.image', verbose_name='Галерея картинок')),
                ('seo', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='main.seo', verbose_name='SEO блок')),
            ],
            options={
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='Hall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hall_number', models.IntegerField(verbose_name='Номер')),
                ('description', models.TextField(verbose_name='Описание')),
                ('scheme', models.ImageField(upload_to='', verbose_name='Схема')),
                ('top_banner', models.ImageField(upload_to='', verbose_name='Верхний баннер')),
                ('cinema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.cinema', verbose_name='Кинотеатр')),
                ('images', models.ManyToManyField(to='main.image', verbose_name='Галерея картинок')),
                ('seo', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='main.seo', verbose_name='SEO блок')),
            ],
            options={
                'verbose_name': 'Зал',
                'verbose_name_plural': 'Залы',
                'ordering': ['hall_number'],
                'unique_together': {('cinema', 'hall_number')},
            },
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('main_picture', models.ImageField(upload_to='', verbose_name='Главная картинка')),
                ('trailer', models.URLField(verbose_name='Ссылка трейлера')),
                ('type', models.CharField(choices=[(None, 'Выберите тип публикуемого фильма'), ('1', '2D'), ('2', '3D'), ('3', 'IMAX')], default='1', max_length=1, verbose_name='Тип')),
                ('premier_date', models.DateField(verbose_name='Дата премьеры')),
                ('images', models.ManyToManyField(to='main.image', verbose_name='Галерея картинок')),
                ('seo', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='main.seo', verbose_name='SEO блок')),
            ],
            options={
                'verbose_name': 'Фильм',
                'verbose_name_plural': 'Фильмы',
                'ordering': ['-premier_date'],
            },
        ),
        migrations.AddField(
            model_name='cinema',
            name='images',
            field=models.ManyToManyField(to='main.image', verbose_name='Галерея картинок'),
        ),
        migrations.AddField(
            model_name='cinema',
            name='seo',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='main.seo', verbose_name='SEO блок'),
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(verbose_name='Время')),
                ('cost', models.FloatField(verbose_name='Цена')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.film', verbose_name='Фильм')),
                ('hall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.hall', verbose_name='Зал')),
            ],
            options={
                'verbose_name': 'Сеанс',
                'verbose_name_plural': 'Сеансы',
                'ordering': ['time'],
                'unique_together': {('hall', 'film', 'time')},
            },
        ),
    ]
